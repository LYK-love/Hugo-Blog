<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on LYK-love</title>
    <link>https://lyk-love.cn/Hugo-Blog/categories/algorithm/</link>
    <description>Recent content in Algorithm on LYK-love</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Aug 2001 08:54:12 +0000</lastBuildDate><atom:link href="https://lyk-love.cn/Hugo-Blog/categories/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>L2 Asymptotics3000</title>
      <link>https://lyk-love.cn/Hugo-Blog/posts/l2-asymptotics/</link>
      <pubDate>Thu, 23 Aug 2001 08:54:12 +0000</pubDate>
      
      <guid>https://lyk-love.cn/Hugo-Blog/posts/l2-asymptotics/</guid>
      <description>&lt;p&gt;Outline:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to Compare Two Algorithms&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brute  Force  by Iteration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brute  Force  by Recursion&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
      <content>&lt;p&gt;Outline:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to Compare Two Algorithms&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brute  Force  by Iteration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brute  Force  by Recursion&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;how-to-compare-two-algorithms&#34;&gt;How to Compare Two Algorithms&lt;/h1&gt;
&lt;p&gt;(c)
$(c)$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Algorithm analysis, with &lt;!-- raw HTML omitted --&gt;simplification&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;Measure the cost by the number of &lt;strong&gt;critical operations&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Large input size only&lt;/li&gt;
&lt;li&gt;Essential part only
&lt;ul&gt;
&lt;li&gt;Only the leading term in$ f(n)$ is considered&lt;/li&gt;
&lt;li&gt;Constant coefficients are ignored&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Capturing the essential part in the cost in a mathematical way
&lt;ul&gt;
&lt;li&gt;Asymptotic &lt;strong&gt;growth rate&lt;/strong&gt; of $f(n)$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;relative-growth-rate&#34;&gt;Relative Growth Rate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$O(g):$​​ functions $A_1, A_2,&amp;hellip;$that grows no faster than $g$​&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$O(g(n))={f(n): 存在常数c&amp;gt;0和n_0&amp;gt;0,满足0\leq f(n) \leq cg(n)对所有n \geq n_0均成立}$​&lt;/li&gt;
&lt;li&gt;$f(n)=O(g(n)) \quad iff \quad \lim\limits_{n \rightarrow \infty} \frac{f(n)}{g(n)}=c&amp;lt;\infty$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$o(g)$: 不快于$g$且与$g$有层次上的差距&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$o(g(n))={f(n): 对任意常数c&amp;gt;0, 均存在常数n_0&amp;gt;0,满足0\leq f(n) &amp;lt; cg(n)对所有n \geq n_0均成立}$​​​&lt;/li&gt;
&lt;li&gt;$f(n)=o(g(n)) \quad iff \quad \lim\limits_{n \rightarrow \infty} \frac{f(n)}{g(n)}=0$​&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\Omega(g)$: functions that grow at least as fast as $g$​&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$\Omega(g(n))={f(n): 存在常数c&amp;gt;0和n_0&amp;gt;0,满足0 \leq cg(n)\leq f(n) 对所有n \geq n_0均成立}$&lt;/li&gt;
&lt;li&gt;$f(n)=\Omega(g(n)) \quad iff \quad \lim\limits_{n \rightarrow \infty} \frac{f(n)}{g(n)}=c&amp;gt;0(c也可以为\infty)$​&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\omega$: 不慢于$g$且与$g$有层次上的差距&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$\omega(g(n))={f(n): 对任意常数c&amp;gt;0,均存在常数n_0&amp;gt;0,满足0 \leq cg(n) &amp;lt; f(n) 对所有n \geq n_0均成立}$​&lt;/li&gt;
&lt;li&gt;$f(n)=\omega(g(n)) \quad iff \quad \lim\limits_{n \rightarrow \infty} \frac{f(n)}{g(n)}=\infty$​​&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\Theta(g):$​​ &amp;hellip; the same rate as $g$​​. (处于同一水平) ( $O$和$\Omega$的交集 )&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$\Theta(g(n))={f(n): 存在常数c_1&amp;gt;0,c_2&amp;gt;0和n_0&amp;gt;0,满足0 \leq c_1g(n)\leq f(n) \leq c_2g(n) 对所有n \geq n_0均成立}$&lt;/li&gt;
&lt;li&gt;$f(n)=\Theta(g(n)) \quad iff \quad \lim\limits_{n \rightarrow \infty} \frac{f(n)}{g(n)}=c&amp;gt;0(0&amp;lt;c&amp;lt;\infty)$​​&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\theta$: 不存在， $o$​和$\omega$​的交集是空集&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;brute--force--by-iteration&#34;&gt;Brute  Force  by Iteration&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Max-sum Subsequence&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;蛮力是$O(n^3)$,  改进一下是$O（n^2）$​，用分治改进是$O（nlogn）$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A linear Algorithm: O(n)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ThisSum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MaxSum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;( j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ; j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; N ; j&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	ThisSum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; A[j];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;( ThisSum &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; MaxSum )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		MaxSum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ThisSum;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;( ThisSum &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		ThisSum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Return MaxSum
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;brute--force--by-recursion&#34;&gt;Brute  Force  by Recursion&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;蛮力策略大智若愚，可以以此为跳板进行改进&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Job Scheduling&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Brute force recursion
&lt;ul&gt;
&lt;li&gt;Select job &amp;lsquo;a&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Case 1: the result does not contain &amp;lsquo;a&amp;rsquo;
&lt;ul&gt;
&lt;li&gt;Recursion on $J \setminus {a}$​​&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Case 2: the result contains &amp;lsquo;a&amp;rsquo;
&lt;ul&gt;
&lt;li&gt;Recursion on  $J \setminus {a} \setminus {$ ​ tasks overlapping with $ a}$​&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Further improvements
&lt;ul&gt;
&lt;li&gt;Dynamic programming(L16)&lt;/li&gt;
&lt;li&gt;Greedy algorithms( L14 )&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Matrix Chain Multiplication&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solutions
&lt;ul&gt;
&lt;li&gt;Brute force recursion(L16)
&lt;ul&gt;
&lt;li&gt;BF1&lt;/li&gt;
&lt;li&gt;BF2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dynamic programming(L16)
&lt;ul&gt;
&lt;li&gt;Based on brute force recursion 2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
    </item>
    
  </channel>
</rss>
